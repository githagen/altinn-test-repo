name: Update Issue with GraphQL ID

on:
  issues:
    types: [opened]

jobs:
  update_issue:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install GitHub CLI
      run: |
        set -e
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Authenticate with GitHub CLI
      run: |
        set -e
        gh auth login --with-token < <(echo ${{ secrets.MY_PAT2 }})

    - name: Get and update the issue body with GraphQL ID
      run: |
        set -e
        # Get the JSON response of the newly created issue
        issue_response=$(gh api repos/$GITHUB_REPOSITORY/issues/${{ github.event.issue.number }})
        echo "Issue Response: $issue_response"

        # Get the body of the newly created issue
        issue_body=$(echo "$issue_response" | jq -r '.body')
        echo "Issue Body: $issue_body"
  
        # Try to extract the GraphQL ID from the issue body
        graphql_id=$(echo "$issue_body" | grep -oP 'GraphQL ID: \K[^\s]+' || echo "[TO BE FILLED]")
        echo "Extracted GraphQL ID: $graphql_id"
  
        # If the GraphQL ID is not found in the issue body or is "[TO BE FILLED]", update the issue with the GraphQL ID
        if [ -z "$graphql_id" ] || [ "$graphql_id" == "[TO BE FILLED]" ]; then
          echo "Updating GraphQL ID..."
          # Get the GraphQL ID of the issue
          graphql_id=$(echo "$issue_response" | jq -r '.node_id')
          echo "GraphQL ID from Response: $graphql_id"
  
          # Update the issue body with the GraphQL ID
          updated_issue_body=$(echo "$issue_body" | sed "s/\*\*GraphQL ID\*\*: \[TO BE FILLED\]/\*\*GraphQL ID\*\*: $graphql_id/")
          echo "Updated Issue Body: $updated_issue_body"

          # Properly escape the updated issue body and construct the JSON payload
          json_payload=$(jq -n --arg body "$updated_issue_body" '{"body": $body}')
          echo "JSON Payload: $json_payload"

          # Update the issue with the new body
          update_response=$(gh api repos/$GITHUB_REPOSITORY/issues/${{ github.event.issue.number }} --input <(echo "$json_payload") -X PATCH)
          echo "Update Response: $update_response"
        fi